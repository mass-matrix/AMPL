name: ampl

on: [push]

jobs:
  ruff:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi

      - name: Install ruff
        run: |
          python3.9 -m pip install ruff

      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python3.9 -m ruff --select=E9,F63,F7,F82 .
          # Check all lint rules
          python3.9 -m ruff check .
          # Check format
          python3.9 -m ruff format --check .

  pytest:
    needs: ruff
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi

      - name: pytest
        run: |
          python3.9 -m pytest -n 2 --capture=sys --capture=fd --cov=api/ -vv
        env:
          ENV: test

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
